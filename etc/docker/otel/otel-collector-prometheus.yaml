# OpenTelemetry Collector Configuration for Prometheus + Jaeger Integration
# This collector receives OTLP data from the application and exports to:
# - Prometheus (metrics via scraping)
# - Jaeger (traces via OTLP)
#
# Application -> OTel Collector (OTLP) -> Prometheus + Jaeger (local)

receivers:
  # OTLP receiver - accepts traces and metrics from your application
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318

processors:
  # Batch processor - batches telemetry before export for efficiency
  batch:
    timeout: 10s
    send_batch_size: 1024

  # Resource detection processor - adds cloud/host metadata
  resourcedetection:
    detectors: [env, system]
    timeout: 2s

  # Resource processor - explicitly sets service metadata
  resource:
    attributes:
      - key: service.name
        value: go-bricks-demo-project
        action: upsert
      - key: deployment.environment
        value: development
        action: upsert
      - key: service.version
        value: 1.0.0
        action: upsert

exporters:
  # Prometheus exporter - exposes metrics endpoint for Prometheus to scrape
  prometheus:
    endpoint: 0.0.0.0:8889
    namespace: gobricks
    const_labels:
      environment: development
    resource_to_telemetry_conversion:
      enabled: true

  # Jaeger exporter - sends traces to Jaeger via OTLP
  otlp/jaeger:
    endpoint: jaeger:4317
    tls:
      insecure: true

  # Debug exporter - logs telemetry to console for troubleshooting
  debug:
    verbosity: detailed
    sampling_initial: 5
    sampling_thereafter: 200

service:
  pipelines:
    # Traces pipeline: OTLP receiver -> processors -> Jaeger exporter
    traces:
      receivers: [otlp]
      processors: [resourcedetection, resource, batch]
      exporters: [otlp/jaeger, debug]

    # Metrics pipeline: OTLP receiver -> processors -> Prometheus exporter
    metrics:
      receivers: [otlp]
      processors: [resourcedetection, resource, batch]
      exporters: [prometheus]

  # Telemetry configuration for the collector itself
  telemetry:
    logs:
      level: info  # Use 'debug' for troubleshooting
